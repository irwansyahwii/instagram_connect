// Autogenerated from Pigeon (v13.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, PGNCode) {
  PGNCodeOne = 0,
  PGNCodeTwo = 1,
};

/// Wrapper for PGNCode to allow for nullability.
@interface PGNCodeBox : NSObject
@property(nonatomic, assign) PGNCode value;
- (instancetype)initWithValue:(PGNCode)value;
@end

typedef NS_ENUM(NSUInteger, PGNTikTokLoginStatus) {
  PGNTikTokLoginStatusSuccess = 0,
  PGNTikTokLoginStatusCancelled = 1,
  PGNTikTokLoginStatusError = 2,
};

/// Wrapper for PGNTikTokLoginStatus to allow for nullability.
@interface PGNTikTokLoginStatusBox : NSObject
@property(nonatomic, assign) PGNTikTokLoginStatus value;
- (instancetype)initWithValue:(PGNTikTokLoginStatus)value;
@end

/// https://developers.tiktok.com/doc/tiktok-api-scopes/
typedef NS_ENUM(NSUInteger, PGNTikTokPermissionType) {
  PGNTikTokPermissionTypeResearchAdlibBasic = 0,
};

/// Wrapper for PGNTikTokPermissionType to allow for nullability.
@interface PGNTikTokPermissionTypeBox : NSObject
@property(nonatomic, assign) PGNTikTokPermissionType value;
- (instancetype)initWithValue:(PGNTikTokPermissionType)value;
@end

@class PGNMessageData;
@class PGNPermission;
@class PGNTikTokLoginResult;

@interface PGNMessageData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithName:(nullable NSString *)name
    description:(nullable NSString *)description
    code:(PGNCode)code
    data:(NSDictionary<NSString *, NSString *> *)data;
@property(nonatomic, copy, nullable) NSString * name;
@property(nonatomic, copy, nullable) NSString * description;
@property(nonatomic, assign) PGNCode code;
@property(nonatomic, copy) NSDictionary<NSString *, NSString *> * data;
@end

@interface PGNPermission : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithName:(NSString *)name;
@property(nonatomic, copy) NSString * name;
@end

@interface PGNTikTokLoginResult : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithStatus:(PGNTikTokLoginStatus)status
    authCode:(nullable NSString *)authCode
    state:(nullable NSString *)state
    codeVerifier:(nullable NSString *)codeVerifier
    grantedPermissions:(NSArray<PGNPermission *> *)grantedPermissions
    errorCode:(nullable NSString *)errorCode
    errorMessage:(nullable NSString *)errorMessage;
@property(nonatomic, assign) PGNTikTokLoginStatus status;
@property(nonatomic, copy, nullable) NSString * authCode;
@property(nonatomic, copy, nullable) NSString * state;
@property(nonatomic, copy, nullable) NSString * codeVerifier;
@property(nonatomic, copy) NSArray<PGNPermission *> * grantedPermissions;
@property(nonatomic, copy, nullable) NSString * errorCode;
@property(nonatomic, copy, nullable) NSString * errorMessage;
@end

/// The codec used by PGNExampleHostApi.
NSObject<FlutterMessageCodec> *PGNExampleHostApiGetCodec(void);

@protocol PGNExampleHostApi
/// @return `nil` only when `error != nil`.
- (nullable NSString *)getHostLanguageWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)addNumber:(NSInteger)a toNumber:(NSInteger)b error:(FlutterError *_Nullable *_Nonnull)error;
- (void)sendMessageMessage:(PGNMessageData *)message completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpPGNExampleHostApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<PGNExampleHostApi> *_Nullable api);

/// The codec used by PGNTiktokSDKApi.
NSObject<FlutterMessageCodec> *PGNTiktokSDKApiGetCodec(void);

@protocol PGNTiktokSDKApi
- (void)setupClientKey:(NSString *)clientKey completion:(void (^)(FlutterError *_Nullable))completion;
- (void)loginPermissions:(NSArray<PGNTikTokPermissionType *> *)permissions redirectUri:(NSString *)redirectUri browserAuthEnabled:(nullable NSNumber *)browserAuthEnabled completion:(void (^)(PGNTikTokLoginResult *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpPGNTiktokSDKApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<PGNTiktokSDKApi> *_Nullable api);

NS_ASSUME_NONNULL_END
